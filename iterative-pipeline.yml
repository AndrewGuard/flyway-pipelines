trigger:
  branches:
    include:
    - master
    # - migrations/*

variables:
  -group: release
  snapshotExists: True

parameters:
  - name: pipelineStages
    type: object
    default: 
    - environmentName: 'build'
      stage: 'Build'
      databaseName: 'Westwind_Build'
      JDBC: 'jdbc:sqlserver://localhost;database=Westwind_Build;integratedSecurity=true'
      dependsOn: ''
      displayName: 'Build'
      isBuild: true

    - environmentName: 'test'
      stage: 'Test'
      databaseName: 'Westwind_Test'
      JDBC: 'jdbc:sqlserver://localhost;database=Westwind_Test;integratedSecurity=true'
      dependsOn: 'Build'
      displayName: 'Deploy Test'
      isDeploy: true
      manualIntervention: false
    
    - environmentName: 'production'
      stage: 'Prod'
      databaseName: 'Westwind'
      JDBC: 'jdbc:sqlserver://localhost;database=Westwind;integratedSecurity=true'
      dependsOn: 'Test'
      displayName: 'Deploy Prod'
      isDeploy: true
      manualIntervention: true

  - name: buildArtifactName 
    type: string
    default: 'Westwind-Build'
  
stages:
  - ${{each stage in parameters.pipelineStages}}:
    - ${{if eq(stage.isBuild, true)}}:
      - stage: Build
        pool: Default
        displayName: ${{stage.displayName}} 
        dependsOn: ${{stage.dependsOn}}
        jobs:
        - job: Build
          steps:
            # - script: 'flyway clean info -url=${{stage.JDBC}}'
            #   failOnStderr: true
            #   displayName: 'Clean Build DB'
            #   env:
            #     FLYWAY_CLEAN_DISABLED: false

            # - script: 'flyway migrate info -url=${{stage.JDBC}}'
            #   failOnStderr: true
            #   displayName: 'Validate Migrate Scripts'

            # - script: 'flyway undo info -url=${{stage.JDBC}}'
            #   failOnStderr: true
            #   displayName: 'Validate Undo Scripts'

            - task: PublishBuildArtifacts@1
              displayName: 'Publish Build Artifact'
              inputs:
                ArtifactName: '${{parameters.buildArtifactName}}'
                PathtoPublish: '$(System.ArtifactsDirectory)'
    
    - ${{if eq(stage.isDeploy, true)}}:
      - stage: ${{stage.stage}} 
        pool: Default
        displayName: ${{stage.displayName}} 
        dependsOn: ${{stage.dependsOn}} 
        # condition: succeeded(${{stage.dependsOn}})
        jobs:
        - job: Deploy
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: '${{parameters.buildArtifactName}}'
                downloadPath: '$(System.ArtifactsDirectory)'

            - script: 'flyway info migrate info -url=${{stage.JDBC}}'
              workingDirectory: $(System.DefaultWorkingDirectory)
              displayName: ${{stage.displayName}}
              failOnStderr: true
              env:
                # clean destroys a target DB, keep disabled except for build step
                FLYWAY_CLEAN_DISABLED: true
