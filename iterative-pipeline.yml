trigger:
  branches:
    include:
    - master
    # - migrations/*

variables:
  -group: release
  snapshotExists: True
  # CAREFUL: flyway clean is destructive - wipes out a target db. It's necessary for shadow and build databases, but be sure to disable on other targets.
  clean_disabled: true

parameters:
  - name: releaseStages
    type: object
    default: 
    
    - environmentName: 'build'
      stage: 'Build'
      databaseName: 'Westwind_Build'
      JDBC: 'jdbc:sqlserver://localhost;database=Westwind_Build;integratedSecurity=true'
      dependsOn: ''
      cleanDisabled: false
      displayName: 'Deploy to Westwind Build'
    
    - environmentName: 'test'
      stage: 'Test'
      databaseName: 'Westwind_Test'
      JDBC: 'jdbc:sqlserver://localhost;database=Westwind_Test;integratedSecurity=true'
      dependsOn: 'Build'
      cleanDisabled: true
      displayName: 'Deploy to Westwind Test'
    
    - environmentName: 'production'
      stage: 'Prod'
      databaseName: 'Westwind'
      JDBC: 'jdbc:sqlserver://localhost;database=Westwind;integratedSecurity=true'
      dependsOn: 'Test'
      cleanDisabled: true
      displayName: 'Deploy to Westwind Prod'

  # - stages:
  #   Publish_build:
  #   - stage: Publish_build
  #   - displayName: Publish build environment
  #   - dependsOn: ''
  #   Publish_test:
  #   - stage: Publish_test
  #   - displayName: Publish test environment
  #   - dependsOn: 'Publish_build'


stages:
  - ${{each stage in parameters.releaseStages}}:
    - stage: ${{ stage.stage }} 
      displayName: ${{ stage.displayName}} 
      dependsOn: ${{ stage.dependsOn}} 
      # condition: succeeded(${{stage.dependsOn}})
      jobs:
      - job: Deploy
        steps:
          - script: 'flyway info migrate info  -url=${{ stage.JDBC }}'
            workingDirectory: $(Build.ArtifactStagingDirectory)
            displayName: ${{ stage.displayName }}
            env:
              FLYWAY_CLEAN_DISABLED: ${{ stage.cleanDisabled }}

# stages:

# - ${{each stage in parameters.releaseStages}}:
# - stage: ${{stage.stage}}
#   displayName: ${{stage.displayName}}
#   dependsOn: ${{stage.dependsOn}}
#   condition: succeeded(${{stage.dependsOn}})
#   jobs:
#   - job: Deploy
#     steps:
#       - script: 'flyway info migrate info  -url=${{ stage.JDBC }}'
#         workingDirectory: $(Build.ArtifactStagingDirectory)
#         displayName: ${{ stage.displayName }}
#         env:
#           FLYWAY_CLEAN_DISABLED: ${{ stage.cleanDisabled }}  

# steps:
#   - ${{each stage in parameters.releaseStages}}:
#     # -stage: ${{ stage.stage }}
#     - script: echo ${{ stage.environmentName }}
#     # - stage: ${{ stage.stage }} 
#     #   dependsOn: ${{ stage.dependsOn }} 
#     #   condition: succeeded(${{ stage.dependsOn }} )
#     #   jobs:
#     #   - job: Deploy
#     #     steps:
#     #       - script: 'flyway info migrate info  -url=${{ stage.JDBC }}'
#     #         workingDirectory: $(Build.ArtifactStagingDirectory)
#     #         displayName: ${{ stage.displayName }}
#     #         env:
#     #           FLYWAY_CLEAN_DISABLED: ${{ stage.cleanDisabled }}  
  
