trigger:
  branches:
    include:
    - master

# variables:
#   -group: release
#   # boolean used for filesystem
#   # snapshotExists: True
#   # flyway clean is destructive - wipes out a target db. It's necessary for shadow and build db, but be sure to disable on other targets.
#   # clean_disabled: true


# -name: releaseStages
# type: object
# default: foo

parameters:
- name: releaseStages
  type: object
  default: 
  - environmentName: 'build'
    databaseName: 'Westwind_Build'
  - environmentName: 'test'
    databaseName: 'Westwind_Test'
    
    # Build:
    #   stage: 'Build'
    #   databaseName: 'Westwind_Build'
    #   JDBC: 'jdbc:sqlserver://localhost;database=Westwind_Build;integratedSecurity=true'
    #   dependsOn: ''
    #   cleanDisabled: false
    #   displayName: 'Deploy to Westwind Build'
    
    # Test:
    #   stage: 'Test'
    #   databaseName: 'Westwind_Test'
    #   JDBC: 'jdbc:sqlserver://localhost;database=Westwind_Test;integratedSecurity=true'
    #   dependsOn: 'Build'
    #   cleanDisabled: true
    #   displayName: 'Deploy to Westwind Test'
    
    # Prod:
    #   stage: 'Prod'
    #   databaseName: 'Westwind'
    #   JDBC: 'jdbc:sqlserver://localhost;database=Westwind;integratedSecurity=true'
    #   dependsOn: 'Test'
    #   cleanDisabled: true
    #   displayName: 'Deploy to Westwind Prod'

steps:
  - ${{each stage in parameters.releaseStages}}:
    # -stage
    - script: echo ${{ stage.environmentName }}
    # - stage: ${{ stage.stage }} 
    #   dependsOn: ${{ stage.dependsOn }} 
    #   condition: succeeded(${{ stage.dependsOn }} )
    #   jobs:
    #   - job: Deploy
    #     steps:
    #       - script: 'flyway info migrate info  -url=${{ stage.JDBC }}'
    #         workingDirectory: $(Build.ArtifactStagingDirectory)
    #         displayName: ${{ stage.displayName }}
    #         env:
    #           FLYWAY_CLEAN_DISABLED: ${{ stage.cleanDisabled }}  
  
